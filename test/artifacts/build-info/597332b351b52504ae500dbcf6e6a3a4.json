{
	"id": "597332b351b52504ae500dbcf6e6a3a4",
	"_format": "hh-sol-build-info-1",
	"solcVersion": "0.8.7",
	"solcLongVersion": "0.8.7+commit.e28d00a7",
	"input": {
		"language": "Solidity",
		"sources": {
			"test/safe_math.sol": {
				"content": "//SPDX-License-Identifier: MIT\npragma solidity ^0.8;\ncontract SafeMath {\n    function testUnderflow() public pure returns (uint) {\n        uint x = 0;\n        x--;\n        return x;\n    }\n\n    function testUncheckedUnderflow() public pure returns (uint) {\n        uint x = 0;\n        unchecked { x--; }\n        return x;\n    }\n}\n\nerror Unauthorized();\n\ncontract VendingMachine {\n    address payable owner = payable(msg.sender);\n\n    function withdraw() public {\n        if (msg.sender != owner)\n            revert Unauthorized();\n\n        owner.transfer(address(this).balance);\n    }\n    // ...\n}"
			}
		},
		"settings": {
			"optimizer": {
				"enabled": false,
				"runs": 200
			},
			"outputSelection": {
				"*": {
					"": [
						"ast"
					],
					"*": [
						"abi",
						"metadata",
						"devdoc",
						"userdoc",
						"storageLayout",
						"evm.legacyAssembly",
						"evm.bytecode",
						"evm.deployedBytecode",
						"evm.methodIdentifiers",
						"evm.gasEstimates",
						"evm.assembly"
					]
				}
			}
		}
	},
	"output": {
		"contracts": {
			"test/safe_math.sol": {
				"SafeMath": {
					"abi": [
						{
							"inputs": [],
							"name": "testUncheckedUnderflow",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "pure",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "testUnderflow",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "pure",
							"type": "function"
						}
					],
					"devdoc": {
						"kind": "dev",
						"methods": {},
						"version": 1
					},
					"evm": {
						"assembly": "    /* \"test/safe_math.sol\":53:328  contract SafeMath {... */\n  mstore(0x40, 0x80)\n  callvalue\n  dup1\n  iszero\n  tag_1\n  jumpi\n  0x00\n  dup1\n  revert\ntag_1:\n  pop\n  dataSize(sub_0)\n  dup1\n  dataOffset(sub_0)\n  0x00\n  codecopy\n  0x00\n  return\nstop\n\nsub_0: assembly {\n        /* \"test/safe_math.sol\":53:328  contract SafeMath {... */\n      mstore(0x40, 0x80)\n      callvalue\n      dup1\n      iszero\n      tag_1\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_1:\n      pop\n      jumpi(tag_2, lt(calldatasize, 0x04))\n      shr(0xe0, calldataload(0x00))\n      dup1\n      0x7f3f6a73\n      eq\n      tag_3\n      jumpi\n      dup1\n      0xa9a3e611\n      eq\n      tag_4\n      jumpi\n    tag_2:\n      0x00\n      dup1\n      revert\n        /* \"test/safe_math.sol\":77:187  function testUnderflow() public pure returns (uint) {... */\n    tag_3:\n      tag_5\n      tag_6\n      jump\t// in\n    tag_5:\n      mload(0x40)\n      tag_7\n      swap2\n      swap1\n      tag_8\n      jump\t// in\n    tag_7:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"test/safe_math.sol\":193:326  function testUncheckedUnderflow() public pure returns (uint) {... */\n    tag_4:\n      tag_9\n      tag_10\n      jump\t// in\n    tag_9:\n      mload(0x40)\n      tag_11\n      swap2\n      swap1\n      tag_8\n      jump\t// in\n    tag_11:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"test/safe_math.sol\":77:187  function testUnderflow() public pure returns (uint) {... */\n    tag_6:\n        /* \"test/safe_math.sol\":123:127  uint */\n      0x00\n        /* \"test/safe_math.sol\":139:145  uint x */\n      dup1\n        /* \"test/safe_math.sol\":148:149  0 */\n      0x00\n        /* \"test/safe_math.sol\":139:149  uint x = 0 */\n      swap1\n      pop\n        /* \"test/safe_math.sol\":159:162  x-- */\n      dup1\n      dup1\n      tag_13\n      swap1\n      tag_14\n      jump\t// in\n    tag_13:\n      swap2\n      pop\n      pop\n        /* \"test/safe_math.sol\":179:180  x */\n      dup1\n        /* \"test/safe_math.sol\":172:180  return x */\n      swap2\n      pop\n      pop\n        /* \"test/safe_math.sol\":77:187  function testUnderflow() public pure returns (uint) {... */\n      swap1\n      jump\t// out\n        /* \"test/safe_math.sol\":193:326  function testUncheckedUnderflow() public pure returns (uint) {... */\n    tag_10:\n        /* \"test/safe_math.sol\":248:252  uint */\n      0x00\n        /* \"test/safe_math.sol\":264:270  uint x */\n      dup1\n        /* \"test/safe_math.sol\":273:274  0 */\n      0x00\n        /* \"test/safe_math.sol\":264:274  uint x = 0 */\n      swap1\n      pop\n        /* \"test/safe_math.sol\":296:299  x-- */\n      dup1\n      dup1\n      0x01\n      swap1\n      sub\n      swap2\n      pop\n      pop\n        /* \"test/safe_math.sol\":318:319  x */\n      dup1\n        /* \"test/safe_math.sol\":311:319  return x */\n      swap2\n      pop\n      pop\n        /* \"test/safe_math.sol\":193:326  function testUncheckedUnderflow() public pure returns (uint) {... */\n      swap1\n      jump\t// out\n        /* \"#utility.yul\":7:125   */\n    tag_17:\n        /* \"#utility.yul\":94:118   */\n      tag_19\n        /* \"#utility.yul\":112:117   */\n      dup2\n        /* \"#utility.yul\":94:118   */\n      tag_20\n      jump\t// in\n    tag_19:\n        /* \"#utility.yul\":89:92   */\n      dup3\n        /* \"#utility.yul\":82:119   */\n      mstore\n        /* \"#utility.yul\":7:125   */\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":131:353   */\n    tag_8:\n        /* \"#utility.yul\":224:228   */\n      0x00\n        /* \"#utility.yul\":262:264   */\n      0x20\n        /* \"#utility.yul\":251:260   */\n      dup3\n        /* \"#utility.yul\":247:265   */\n      add\n        /* \"#utility.yul\":239:265   */\n      swap1\n      pop\n        /* \"#utility.yul\":275:346   */\n      tag_22\n        /* \"#utility.yul\":343:344   */\n      0x00\n        /* \"#utility.yul\":332:341   */\n      dup4\n        /* \"#utility.yul\":328:345   */\n      add\n        /* \"#utility.yul\":319:325   */\n      dup5\n        /* \"#utility.yul\":275:346   */\n      tag_17\n      jump\t// in\n    tag_22:\n        /* \"#utility.yul\":131:353   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":359:436   */\n    tag_20:\n        /* \"#utility.yul\":396:403   */\n      0x00\n        /* \"#utility.yul\":425:430   */\n      dup2\n        /* \"#utility.yul\":414:430   */\n      swap1\n      pop\n        /* \"#utility.yul\":359:436   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":442:613   */\n    tag_14:\n        /* \"#utility.yul\":481:484   */\n      0x00\n        /* \"#utility.yul\":504:528   */\n      tag_25\n        /* \"#utility.yul\":522:527   */\n      dup3\n        /* \"#utility.yul\":504:528   */\n      tag_20\n      jump\t// in\n    tag_25:\n        /* \"#utility.yul\":495:528   */\n      swap2\n      pop\n        /* \"#utility.yul\":550:554   */\n      0x00\n        /* \"#utility.yul\":543:548   */\n      dup3\n        /* \"#utility.yul\":540:555   */\n      eq\n        /* \"#utility.yul\":537:578   */\n      iszero\n      tag_26\n      jumpi\n        /* \"#utility.yul\":558:576   */\n      tag_27\n      tag_28\n      jump\t// in\n    tag_27:\n        /* \"#utility.yul\":537:578   */\n    tag_26:\n        /* \"#utility.yul\":605:606   */\n      0x01\n        /* \"#utility.yul\":598:603   */\n      dup3\n        /* \"#utility.yul\":594:607   */\n      sub\n        /* \"#utility.yul\":587:607   */\n      swap1\n      pop\n        /* \"#utility.yul\":442:613   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":619:799   */\n    tag_28:\n        /* \"#utility.yul\":667:744   */\n      0x4e487b7100000000000000000000000000000000000000000000000000000000\n        /* \"#utility.yul\":664:665   */\n      0x00\n        /* \"#utility.yul\":657:745   */\n      mstore\n        /* \"#utility.yul\":764:768   */\n      0x11\n        /* \"#utility.yul\":761:762   */\n      0x04\n        /* \"#utility.yul\":754:769   */\n      mstore\n        /* \"#utility.yul\":788:792   */\n      0x24\n        /* \"#utility.yul\":785:786   */\n      0x00\n        /* \"#utility.yul\":778:793   */\n      revert\n\n    auxdata: 0xa2646970667358221220d38c2637ec68c45296978df4706c82b5fae3259b47d5f5c3dbf69ffebbd5887064736f6c63430008070033\n}\n",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "608060405234801561001057600080fd5b5061016d806100206000396000f3fe608060405234801561001057600080fd5b50600436106100365760003560e01c80637f3f6a731461003b578063a9a3e61114610059575b600080fd5b610043610077565b60405161005091906100b9565b60405180910390f35b610061610093565b60405161006e91906100b9565b60405180910390f35b600080600090508080610089906100de565b9150508091505090565b600080600090508080600190039150508091505090565b6100b3816100d4565b82525050565b60006020820190506100ce60008301846100aa565b92915050565b6000819050919050565b60006100e9826100d4565b915060008214156100fd576100fc610108565b5b600182039050919050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052601160045260246000fdfea2646970667358221220d38c2637ec68c45296978df4706c82b5fae3259b47d5f5c3dbf69ffebbd5887064736f6c63430008070033",
							"opcodes": "PUSH1 0x80 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH2 0x10 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x16D DUP1 PUSH2 0x20 PUSH1 0x0 CODECOPY PUSH1 0x0 RETURN INVALID PUSH1 0x80 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH2 0x10 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x4 CALLDATASIZE LT PUSH2 0x36 JUMPI PUSH1 0x0 CALLDATALOAD PUSH1 0xE0 SHR DUP1 PUSH4 0x7F3F6A73 EQ PUSH2 0x3B JUMPI DUP1 PUSH4 0xA9A3E611 EQ PUSH2 0x59 JUMPI JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x43 PUSH2 0x77 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x50 SWAP2 SWAP1 PUSH2 0xB9 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x61 PUSH2 0x93 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x6E SWAP2 SWAP1 PUSH2 0xB9 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 SWAP1 POP DUP1 DUP1 PUSH2 0x89 SWAP1 PUSH2 0xDE JUMP JUMPDEST SWAP2 POP POP DUP1 SWAP2 POP POP SWAP1 JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 SWAP1 POP DUP1 DUP1 PUSH1 0x1 SWAP1 SUB SWAP2 POP POP DUP1 SWAP2 POP POP SWAP1 JUMP JUMPDEST PUSH2 0xB3 DUP2 PUSH2 0xD4 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0xCE PUSH1 0x0 DUP4 ADD DUP5 PUSH2 0xAA JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0xE9 DUP3 PUSH2 0xD4 JUMP JUMPDEST SWAP2 POP PUSH1 0x0 DUP3 EQ ISZERO PUSH2 0xFD JUMPI PUSH2 0xFC PUSH2 0x108 JUMP JUMPDEST JUMPDEST PUSH1 0x1 DUP3 SUB SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH1 0x11 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 0xD3 DUP13 0x26 CALLDATACOPY 0xEC PUSH9 0xC45296978DF4706C82 0xB5 STATICCALL 0xE3 0x25 SWAP12 SELFBALANCE 0xD5 CREATE2 0xC3 0xDB 0xF6 SWAP16 INVALID 0xBB 0xD5 DUP9 PUSH17 0x64736F6C63430008070033000000000000 ",
							"sourceMap": "53:275:0:-:0;;;;;;;;;;;;;;;;;;;"
						},
						"deployedBytecode": {
							"functionDebugData": {
								"@testUncheckedUnderflow_32": {
									"entryPoint": 147,
									"id": 32,
									"parameterSlots": 0,
									"returnSlots": 1
								},
								"@testUnderflow_16": {
									"entryPoint": 119,
									"id": 16,
									"parameterSlots": 0,
									"returnSlots": 1
								},
								"abi_encode_t_uint256_to_t_uint256_fromStack": {
									"entryPoint": 170,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"abi_encode_tuple_t_uint256__to_t_uint256__fromStack_reversed": {
									"entryPoint": 185,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"cleanup_t_uint256": {
									"entryPoint": 212,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"decrement_t_uint256": {
									"entryPoint": 222,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"panic_error_0x11": {
									"entryPoint": 264,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								}
							},
							"generatedSources": [
								{
									"ast": {
										"nodeType": "YulBlock",
										"src": "0:802:1",
										"statements": [
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "72:53:1",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "89:3:1"
																	},
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nodeType": "YulIdentifier",
																				"src": "112:5:1"
																			}
																		],
																		"functionName": {
																			"name": "cleanup_t_uint256",
																			"nodeType": "YulIdentifier",
																			"src": "94:17:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "94:24:1"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "82:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "82:37:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "82:37:1"
														}
													]
												},
												"name": "abi_encode_t_uint256_to_t_uint256_fromStack",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "60:5:1",
														"type": ""
													},
													{
														"name": "pos",
														"nodeType": "YulTypedName",
														"src": "67:3:1",
														"type": ""
													}
												],
												"src": "7:118:1"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "229:124:1",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "239:26:1",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "251:9:1"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "262:2:1",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "247:3:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "247:18:1"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "239:4:1"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value0",
																		"nodeType": "YulIdentifier",
																		"src": "319:6:1"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "332:9:1"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "343:1:1",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "328:3:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "328:17:1"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_uint256_to_t_uint256_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "275:43:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "275:71:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "275:71:1"
														}
													]
												},
												"name": "abi_encode_tuple_t_uint256__to_t_uint256__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "201:9:1",
														"type": ""
													},
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "213:6:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "224:4:1",
														"type": ""
													}
												],
												"src": "131:222:1"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "404:32:1",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "414:16:1",
															"value": {
																"name": "value",
																"nodeType": "YulIdentifier",
																"src": "425:5:1"
															},
															"variableNames": [
																{
																	"name": "cleaned",
																	"nodeType": "YulIdentifier",
																	"src": "414:7:1"
																}
															]
														}
													]
												},
												"name": "cleanup_t_uint256",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "386:5:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "cleaned",
														"nodeType": "YulTypedName",
														"src": "396:7:1",
														"type": ""
													}
												],
												"src": "359:77:1"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "485:128:1",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "495:33:1",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nodeType": "YulIdentifier",
																		"src": "522:5:1"
																	}
																],
																"functionName": {
																	"name": "cleanup_t_uint256",
																	"nodeType": "YulIdentifier",
																	"src": "504:17:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "504:24:1"
															},
															"variableNames": [
																{
																	"name": "value",
																	"nodeType": "YulIdentifier",
																	"src": "495:5:1"
																}
															]
														},
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "556:22:1",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "panic_error_0x11",
																				"nodeType": "YulIdentifier",
																				"src": "558:16:1"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "558:18:1"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "558:18:1"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "value",
																		"nodeType": "YulIdentifier",
																		"src": "543:5:1"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "550:4:1",
																		"type": "",
																		"value": "0x00"
																	}
																],
																"functionName": {
																	"name": "eq",
																	"nodeType": "YulIdentifier",
																	"src": "540:2:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "540:15:1"
															},
															"nodeType": "YulIf",
															"src": "537:41:1"
														},
														{
															"nodeType": "YulAssignment",
															"src": "587:20:1",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nodeType": "YulIdentifier",
																		"src": "598:5:1"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "605:1:1",
																		"type": "",
																		"value": "1"
																	}
																],
																"functionName": {
																	"name": "sub",
																	"nodeType": "YulIdentifier",
																	"src": "594:3:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "594:13:1"
															},
															"variableNames": [
																{
																	"name": "ret",
																	"nodeType": "YulIdentifier",
																	"src": "587:3:1"
																}
															]
														}
													]
												},
												"name": "decrement_t_uint256",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "471:5:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "ret",
														"nodeType": "YulTypedName",
														"src": "481:3:1",
														"type": ""
													}
												],
												"src": "442:171:1"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "647:152:1",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "664:1:1",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "667:77:1",
																		"type": "",
																		"value": "35408467139433450592217433187231851964531694900788300625387963629091585785856"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "657:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "657:88:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "657:88:1"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "761:1:1",
																		"type": "",
																		"value": "4"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "764:4:1",
																		"type": "",
																		"value": "0x11"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "754:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "754:15:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "754:15:1"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "785:1:1",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "788:4:1",
																		"type": "",
																		"value": "0x24"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nodeType": "YulIdentifier",
																	"src": "778:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "778:15:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "778:15:1"
														}
													]
												},
												"name": "panic_error_0x11",
												"nodeType": "YulFunctionDefinition",
												"src": "619:180:1"
											}
										]
									},
									"contents": "{\n\n    function abi_encode_t_uint256_to_t_uint256_fromStack(value, pos) {\n        mstore(pos, cleanup_t_uint256(value))\n    }\n\n    function abi_encode_tuple_t_uint256__to_t_uint256__fromStack_reversed(headStart , value0) -> tail {\n        tail := add(headStart, 32)\n\n        abi_encode_t_uint256_to_t_uint256_fromStack(value0,  add(headStart, 0))\n\n    }\n\n    function cleanup_t_uint256(value) -> cleaned {\n        cleaned := value\n    }\n\n    function decrement_t_uint256(value) -> ret {\n        value := cleanup_t_uint256(value)\n        if eq(value, 0x00) { panic_error_0x11() }\n        ret := sub(value, 1)\n    }\n\n    function panic_error_0x11() {\n        mstore(0, 35408467139433450592217433187231851964531694900788300625387963629091585785856)\n        mstore(4, 0x11)\n        revert(0, 0x24)\n    }\n\n}\n",
									"id": 1,
									"language": "Yul",
									"name": "#utility.yul"
								}
							],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "608060405234801561001057600080fd5b50600436106100365760003560e01c80637f3f6a731461003b578063a9a3e61114610059575b600080fd5b610043610077565b60405161005091906100b9565b60405180910390f35b610061610093565b60405161006e91906100b9565b60405180910390f35b600080600090508080610089906100de565b9150508091505090565b600080600090508080600190039150508091505090565b6100b3816100d4565b82525050565b60006020820190506100ce60008301846100aa565b92915050565b6000819050919050565b60006100e9826100d4565b915060008214156100fd576100fc610108565b5b600182039050919050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052601160045260246000fdfea2646970667358221220d38c2637ec68c45296978df4706c82b5fae3259b47d5f5c3dbf69ffebbd5887064736f6c63430008070033",
							"opcodes": "PUSH1 0x80 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH2 0x10 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x4 CALLDATASIZE LT PUSH2 0x36 JUMPI PUSH1 0x0 CALLDATALOAD PUSH1 0xE0 SHR DUP1 PUSH4 0x7F3F6A73 EQ PUSH2 0x3B JUMPI DUP1 PUSH4 0xA9A3E611 EQ PUSH2 0x59 JUMPI JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x43 PUSH2 0x77 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x50 SWAP2 SWAP1 PUSH2 0xB9 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x61 PUSH2 0x93 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x6E SWAP2 SWAP1 PUSH2 0xB9 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 SWAP1 POP DUP1 DUP1 PUSH2 0x89 SWAP1 PUSH2 0xDE JUMP JUMPDEST SWAP2 POP POP DUP1 SWAP2 POP POP SWAP1 JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 SWAP1 POP DUP1 DUP1 PUSH1 0x1 SWAP1 SUB SWAP2 POP POP DUP1 SWAP2 POP POP SWAP1 JUMP JUMPDEST PUSH2 0xB3 DUP2 PUSH2 0xD4 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0xCE PUSH1 0x0 DUP4 ADD DUP5 PUSH2 0xAA JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0xE9 DUP3 PUSH2 0xD4 JUMP JUMPDEST SWAP2 POP PUSH1 0x0 DUP3 EQ ISZERO PUSH2 0xFD JUMPI PUSH2 0xFC PUSH2 0x108 JUMP JUMPDEST JUMPDEST PUSH1 0x1 DUP3 SUB SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH1 0x11 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 0xD3 DUP13 0x26 CALLDATACOPY 0xEC PUSH9 0xC45296978DF4706C82 0xB5 STATICCALL 0xE3 0x25 SWAP12 SELFBALANCE 0xD5 CREATE2 0xC3 0xDB 0xF6 SWAP16 INVALID 0xBB 0xD5 DUP9 PUSH17 0x64736F6C63430008070033000000000000 ",
							"sourceMap": "53:275:0:-:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;77:110;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;193:133;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;77:110;123:4;139:6;148:1;139:10;;159:3;;;;;:::i;:::-;;;;179:1;172:8;;;77:110;:::o;193:133::-;248:4;264:6;273:1;264:10;;296:3;;;;;;;;318:1;311:8;;;193:133;:::o;7:118:1:-;94:24;112:5;94:24;:::i;:::-;89:3;82:37;7:118;;:::o;131:222::-;224:4;262:2;251:9;247:18;239:26;;275:71;343:1;332:9;328:17;319:6;275:71;:::i;:::-;131:222;;;;:::o;359:77::-;396:7;425:5;414:16;;359:77;;;:::o;442:171::-;481:3;504:24;522:5;504:24;:::i;:::-;495:33;;550:4;543:5;540:15;537:41;;;558:18;;:::i;:::-;537:41;605:1;598:5;594:13;587:20;;442:171;;;:::o;619:180::-;667:77;664:1;657:88;764:4;761:1;754:15;788:4;785:1;778:15"
						},
						"gasEstimates": {
							"creation": {
								"codeDepositCost": "73000",
								"executionCost": "123",
								"totalCost": "73123"
							},
							"external": {
								"testUncheckedUnderflow()": "372",
								"testUnderflow()": "269"
							}
						},
						"legacyAssembly": {
							".code": [
								{
									"begin": 53,
									"end": 328,
									"name": "PUSH",
									"source": 0,
									"value": "80"
								},
								{
									"begin": 53,
									"end": 328,
									"name": "PUSH",
									"source": 0,
									"value": "40"
								},
								{
									"begin": 53,
									"end": 328,
									"name": "MSTORE",
									"source": 0
								},
								{
									"begin": 53,
									"end": 328,
									"name": "CALLVALUE",
									"source": 0
								},
								{
									"begin": 53,
									"end": 328,
									"name": "DUP1",
									"source": 0
								},
								{
									"begin": 53,
									"end": 328,
									"name": "ISZERO",
									"source": 0
								},
								{
									"begin": 53,
									"end": 328,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "1"
								},
								{
									"begin": 53,
									"end": 328,
									"name": "JUMPI",
									"source": 0
								},
								{
									"begin": 53,
									"end": 328,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 53,
									"end": 328,
									"name": "DUP1",
									"source": 0
								},
								{
									"begin": 53,
									"end": 328,
									"name": "REVERT",
									"source": 0
								},
								{
									"begin": 53,
									"end": 328,
									"name": "tag",
									"source": 0,
									"value": "1"
								},
								{
									"begin": 53,
									"end": 328,
									"name": "JUMPDEST",
									"source": 0
								},
								{
									"begin": 53,
									"end": 328,
									"name": "POP",
									"source": 0
								},
								{
									"begin": 53,
									"end": 328,
									"name": "PUSH #[$]",
									"source": 0,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 53,
									"end": 328,
									"name": "DUP1",
									"source": 0
								},
								{
									"begin": 53,
									"end": 328,
									"name": "PUSH [$]",
									"source": 0,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 53,
									"end": 328,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 53,
									"end": 328,
									"name": "CODECOPY",
									"source": 0
								},
								{
									"begin": 53,
									"end": 328,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 53,
									"end": 328,
									"name": "RETURN",
									"source": 0
								}
							],
							".data": {
								"0": {
									".auxdata": "a2646970667358221220d38c2637ec68c45296978df4706c82b5fae3259b47d5f5c3dbf69ffebbd5887064736f6c63430008070033",
									".code": [
										{
											"begin": 53,
											"end": 328,
											"name": "PUSH",
											"source": 0,
											"value": "80"
										},
										{
											"begin": 53,
											"end": 328,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 53,
											"end": 328,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 53,
											"end": 328,
											"name": "CALLVALUE",
											"source": 0
										},
										{
											"begin": 53,
											"end": 328,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 53,
											"end": 328,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 53,
											"end": 328,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "1"
										},
										{
											"begin": 53,
											"end": 328,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 53,
											"end": 328,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 53,
											"end": 328,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 53,
											"end": 328,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 53,
											"end": 328,
											"name": "tag",
											"source": 0,
											"value": "1"
										},
										{
											"begin": 53,
											"end": 328,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 53,
											"end": 328,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 53,
											"end": 328,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 53,
											"end": 328,
											"name": "CALLDATASIZE",
											"source": 0
										},
										{
											"begin": 53,
											"end": 328,
											"name": "LT",
											"source": 0
										},
										{
											"begin": 53,
											"end": 328,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "2"
										},
										{
											"begin": 53,
											"end": 328,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 53,
											"end": 328,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 53,
											"end": 328,
											"name": "CALLDATALOAD",
											"source": 0
										},
										{
											"begin": 53,
											"end": 328,
											"name": "PUSH",
											"source": 0,
											"value": "E0"
										},
										{
											"begin": 53,
											"end": 328,
											"name": "SHR",
											"source": 0
										},
										{
											"begin": 53,
											"end": 328,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 53,
											"end": 328,
											"name": "PUSH",
											"source": 0,
											"value": "7F3F6A73"
										},
										{
											"begin": 53,
											"end": 328,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 53,
											"end": 328,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "3"
										},
										{
											"begin": 53,
											"end": 328,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 53,
											"end": 328,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 53,
											"end": 328,
											"name": "PUSH",
											"source": 0,
											"value": "A9A3E611"
										},
										{
											"begin": 53,
											"end": 328,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 53,
											"end": 328,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 53,
											"end": 328,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 53,
											"end": 328,
											"name": "tag",
											"source": 0,
											"value": "2"
										},
										{
											"begin": 53,
											"end": 328,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 53,
											"end": 328,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 53,
											"end": 328,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 53,
											"end": 328,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 77,
											"end": 187,
											"name": "tag",
											"source": 0,
											"value": "3"
										},
										{
											"begin": 77,
											"end": 187,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 77,
											"end": 187,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "5"
										},
										{
											"begin": 77,
											"end": 187,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "6"
										},
										{
											"begin": 77,
											"end": 187,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 77,
											"end": 187,
											"name": "tag",
											"source": 0,
											"value": "5"
										},
										{
											"begin": 77,
											"end": 187,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 77,
											"end": 187,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 77,
											"end": 187,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 77,
											"end": 187,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "7"
										},
										{
											"begin": 77,
											"end": 187,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 77,
											"end": 187,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 77,
											"end": 187,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "8"
										},
										{
											"begin": 77,
											"end": 187,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 77,
											"end": 187,
											"name": "tag",
											"source": 0,
											"value": "7"
										},
										{
											"begin": 77,
											"end": 187,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 77,
											"end": 187,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 77,
											"end": 187,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 77,
											"end": 187,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 77,
											"end": 187,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 77,
											"end": 187,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 77,
											"end": 187,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 77,
											"end": 187,
											"name": "RETURN",
											"source": 0
										},
										{
											"begin": 193,
											"end": 326,
											"name": "tag",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 193,
											"end": 326,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 193,
											"end": 326,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "9"
										},
										{
											"begin": 193,
											"end": 326,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "10"
										},
										{
											"begin": 193,
											"end": 326,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 193,
											"end": 326,
											"name": "tag",
											"source": 0,
											"value": "9"
										},
										{
											"begin": 193,
											"end": 326,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 193,
											"end": 326,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 193,
											"end": 326,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 193,
											"end": 326,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "11"
										},
										{
											"begin": 193,
											"end": 326,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 193,
											"end": 326,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 193,
											"end": 326,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "8"
										},
										{
											"begin": 193,
											"end": 326,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 193,
											"end": 326,
											"name": "tag",
											"source": 0,
											"value": "11"
										},
										{
											"begin": 193,
											"end": 326,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 193,
											"end": 326,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 193,
											"end": 326,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 193,
											"end": 326,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 193,
											"end": 326,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 193,
											"end": 326,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 193,
											"end": 326,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 193,
											"end": 326,
											"name": "RETURN",
											"source": 0
										},
										{
											"begin": 77,
											"end": 187,
											"name": "tag",
											"source": 0,
											"value": "6"
										},
										{
											"begin": 77,
											"end": 187,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 123,
											"end": 127,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 139,
											"end": 145,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 148,
											"end": 149,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 139,
											"end": 149,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 139,
											"end": 149,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 159,
											"end": 162,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 159,
											"end": 162,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 159,
											"end": 162,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "13"
										},
										{
											"begin": 159,
											"end": 162,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 159,
											"end": 162,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "14"
										},
										{
											"begin": 159,
											"end": 162,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 159,
											"end": 162,
											"name": "tag",
											"source": 0,
											"value": "13"
										},
										{
											"begin": 159,
											"end": 162,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 159,
											"end": 162,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 159,
											"end": 162,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 159,
											"end": 162,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 179,
											"end": 180,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 172,
											"end": 180,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 172,
											"end": 180,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 172,
											"end": 180,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 77,
											"end": 187,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 77,
											"end": 187,
											"name": "JUMP",
											"source": 0,
											"value": "[out]"
										},
										{
											"begin": 193,
											"end": 326,
											"name": "tag",
											"source": 0,
											"value": "10"
										},
										{
											"begin": 193,
											"end": 326,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 248,
											"end": 252,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 264,
											"end": 270,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 273,
											"end": 274,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 264,
											"end": 274,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 264,
											"end": 274,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 296,
											"end": 299,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 296,
											"end": 299,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 296,
											"end": 299,
											"name": "PUSH",
											"source": 0,
											"value": "1"
										},
										{
											"begin": 296,
											"end": 299,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 296,
											"end": 299,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 296,
											"end": 299,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 296,
											"end": 299,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 296,
											"end": 299,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 318,
											"end": 319,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 311,
											"end": 319,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 311,
											"end": 319,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 311,
											"end": 319,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 193,
											"end": 326,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 193,
											"end": 326,
											"name": "JUMP",
											"source": 0,
											"value": "[out]"
										},
										{
											"begin": 7,
											"end": 125,
											"name": "tag",
											"source": 1,
											"value": "17"
										},
										{
											"begin": 7,
											"end": 125,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 94,
											"end": 118,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "19"
										},
										{
											"begin": 112,
											"end": 117,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 94,
											"end": 118,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 94,
											"end": 118,
											"name": "JUMP",
											"source": 1,
											"value": "[in]"
										},
										{
											"begin": 94,
											"end": 118,
											"name": "tag",
											"source": 1,
											"value": "19"
										},
										{
											"begin": 94,
											"end": 118,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 89,
											"end": 92,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 82,
											"end": 119,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 7,
											"end": 125,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 7,
											"end": 125,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 7,
											"end": 125,
											"name": "JUMP",
											"source": 1,
											"value": "[out]"
										},
										{
											"begin": 131,
											"end": 353,
											"name": "tag",
											"source": 1,
											"value": "8"
										},
										{
											"begin": 131,
											"end": 353,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 224,
											"end": 228,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 262,
											"end": 264,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 251,
											"end": 260,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 247,
											"end": 265,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 239,
											"end": 265,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 239,
											"end": 265,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 275,
											"end": 346,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "22"
										},
										{
											"begin": 343,
											"end": 344,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 332,
											"end": 341,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 328,
											"end": 345,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 319,
											"end": 325,
											"name": "DUP5",
											"source": 1
										},
										{
											"begin": 275,
											"end": 346,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "17"
										},
										{
											"begin": 275,
											"end": 346,
											"name": "JUMP",
											"source": 1,
											"value": "[in]"
										},
										{
											"begin": 275,
											"end": 346,
											"name": "tag",
											"source": 1,
											"value": "22"
										},
										{
											"begin": 275,
											"end": 346,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 131,
											"end": 353,
											"name": "SWAP3",
											"source": 1
										},
										{
											"begin": 131,
											"end": 353,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 131,
											"end": 353,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 131,
											"end": 353,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 131,
											"end": 353,
											"name": "JUMP",
											"source": 1,
											"value": "[out]"
										},
										{
											"begin": 359,
											"end": 436,
											"name": "tag",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 359,
											"end": 436,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 396,
											"end": 403,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 425,
											"end": 430,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 414,
											"end": 430,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 414,
											"end": 430,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 359,
											"end": 436,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 359,
											"end": 436,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 359,
											"end": 436,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 359,
											"end": 436,
											"name": "JUMP",
											"source": 1,
											"value": "[out]"
										},
										{
											"begin": 442,
											"end": 613,
											"name": "tag",
											"source": 1,
											"value": "14"
										},
										{
											"begin": 442,
											"end": 613,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 481,
											"end": 484,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 504,
											"end": 528,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "25"
										},
										{
											"begin": 522,
											"end": 527,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 504,
											"end": 528,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 504,
											"end": 528,
											"name": "JUMP",
											"source": 1,
											"value": "[in]"
										},
										{
											"begin": 504,
											"end": 528,
											"name": "tag",
											"source": 1,
											"value": "25"
										},
										{
											"begin": 504,
											"end": 528,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 495,
											"end": 528,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 495,
											"end": 528,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 550,
											"end": 554,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 543,
											"end": 548,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 540,
											"end": 555,
											"name": "EQ",
											"source": 1
										},
										{
											"begin": 537,
											"end": 578,
											"name": "ISZERO",
											"source": 1
										},
										{
											"begin": 537,
											"end": 578,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "26"
										},
										{
											"begin": 537,
											"end": 578,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 558,
											"end": 576,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "27"
										},
										{
											"begin": 558,
											"end": 576,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "28"
										},
										{
											"begin": 558,
											"end": 576,
											"name": "JUMP",
											"source": 1,
											"value": "[in]"
										},
										{
											"begin": 558,
											"end": 576,
											"name": "tag",
											"source": 1,
											"value": "27"
										},
										{
											"begin": 558,
											"end": 576,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 537,
											"end": 578,
											"name": "tag",
											"source": 1,
											"value": "26"
										},
										{
											"begin": 537,
											"end": 578,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 605,
											"end": 606,
											"name": "PUSH",
											"source": 1,
											"value": "1"
										},
										{
											"begin": 598,
											"end": 603,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 594,
											"end": 607,
											"name": "SUB",
											"source": 1
										},
										{
											"begin": 587,
											"end": 607,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 587,
											"end": 607,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 442,
											"end": 613,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 442,
											"end": 613,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 442,
											"end": 613,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 442,
											"end": 613,
											"name": "JUMP",
											"source": 1,
											"value": "[out]"
										},
										{
											"begin": 619,
											"end": 799,
											"name": "tag",
											"source": 1,
											"value": "28"
										},
										{
											"begin": 619,
											"end": 799,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 667,
											"end": 744,
											"name": "PUSH",
											"source": 1,
											"value": "4E487B7100000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 664,
											"end": 665,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 657,
											"end": 745,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 764,
											"end": 768,
											"name": "PUSH",
											"source": 1,
											"value": "11"
										},
										{
											"begin": 761,
											"end": 762,
											"name": "PUSH",
											"source": 1,
											"value": "4"
										},
										{
											"begin": 754,
											"end": 769,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 788,
											"end": 792,
											"name": "PUSH",
											"source": 1,
											"value": "24"
										},
										{
											"begin": 785,
											"end": 786,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 778,
											"end": 793,
											"name": "REVERT",
											"source": 1
										}
									]
								}
							}
						},
						"methodIdentifiers": {
							"testUncheckedUnderflow()": "a9a3e611",
							"testUnderflow()": "7f3f6a73"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.7+commit.e28d00a7\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[],\"name\":\"testUncheckedUnderflow\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"pure\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"testUnderflow\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"pure\",\"type\":\"function\"}],\"devdoc\":{\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"test/safe_math.sol\":\"SafeMath\"},\"evmVersion\":\"london\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"test/safe_math.sol\":{\"keccak256\":\"0x13ea1eb53106b91831fb81876b935db23d81852220f120498f349dce2d970c11\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://e139d886b0455b3f35053961b241c4dbf54ffb92b61d6ece78873e1f75ef1c5f\",\"dweb:/ipfs/QmUyPvLfvDfk3sToHFfkSfgAW7icX4LXqXcYgU6GrDeRWp\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				},
				"VendingMachine": {
					"abi": [
						{
							"inputs": [],
							"name": "Unauthorized",
							"type": "error"
						},
						{
							"inputs": [],
							"name": "withdraw",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						}
					],
					"devdoc": {
						"kind": "dev",
						"methods": {},
						"version": 1
					},
					"evm": {
						"assembly": "    /* \"test/safe_math.sol\":353:596  contract VendingMachine {... */\n  mstore(0x40, 0x80)\n    /* \"test/safe_math.sol\":415:425  msg.sender */\n  caller\n    /* \"test/safe_math.sol\":383:426  address payable owner = payable(msg.sender) */\n  0x00\n  dup1\n  0x0100\n  exp\n  dup2\n  sload\n  dup2\n  0xffffffffffffffffffffffffffffffffffffffff\n  mul\n  not\n  and\n  swap1\n  dup4\n  0xffffffffffffffffffffffffffffffffffffffff\n  and\n  mul\n  or\n  swap1\n  sstore\n  pop\n    /* \"test/safe_math.sol\":353:596  contract VendingMachine {... */\n  callvalue\n  dup1\n  iszero\n  tag_1\n  jumpi\n  0x00\n  dup1\n  revert\ntag_1:\n  pop\n  dataSize(sub_0)\n  dup1\n  dataOffset(sub_0)\n  0x00\n  codecopy\n  0x00\n  return\nstop\n\nsub_0: assembly {\n        /* \"test/safe_math.sol\":353:596  contract VendingMachine {... */\n      mstore(0x40, 0x80)\n      callvalue\n      dup1\n      iszero\n      tag_1\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_1:\n      pop\n      jumpi(tag_2, lt(calldatasize, 0x04))\n      shr(0xe0, calldataload(0x00))\n      dup1\n      0x3ccfd60b\n      eq\n      tag_3\n      jumpi\n    tag_2:\n      0x00\n      dup1\n      revert\n        /* \"test/safe_math.sol\":433:583  function withdraw() public {... */\n    tag_3:\n      tag_4\n      tag_5\n      jump\t// in\n    tag_4:\n      stop\n    tag_5:\n        /* \"test/safe_math.sol\":488:493  owner */\n      0x00\n      dup1\n      sload\n      swap1\n      0x0100\n      exp\n      swap1\n      div\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"test/safe_math.sol\":474:493  msg.sender != owner */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"test/safe_math.sol\":474:484  msg.sender */\n      caller\n        /* \"test/safe_math.sol\":474:493  msg.sender != owner */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      eq\n        /* \"test/safe_math.sol\":470:528  if (msg.sender != owner)... */\n      tag_7\n      jumpi\n        /* \"test/safe_math.sol\":514:528  Unauthorized() */\n      mload(0x40)\n      0x82b4290000000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n        /* \"test/safe_math.sol\":470:528  if (msg.sender != owner)... */\n    tag_7:\n        /* \"test/safe_math.sol\":539:544  owner */\n      0x00\n      dup1\n      sload\n      swap1\n      0x0100\n      exp\n      swap1\n      div\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"test/safe_math.sol\":539:553  owner.transfer */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"test/safe_math.sol\":539:576  owner.transfer(address(this).balance) */\n      0x08fc\n        /* \"test/safe_math.sol\":554:575  address(this).balance */\n      selfbalance\n        /* \"test/safe_math.sol\":539:576  owner.transfer(address(this).balance) */\n      swap1\n      dup2\n      iszero\n      mul\n      swap1\n      mload(0x40)\n      0x00\n      mload(0x40)\n      dup1\n      dup4\n      sub\n      dup2\n      dup6\n      dup9\n      dup9\n      call\n      swap4\n      pop\n      pop\n      pop\n      pop\n      iszero\n      dup1\n      iszero\n      tag_9\n      jumpi\n      returndatasize\n      0x00\n      dup1\n      returndatacopy\n      revert(0x00, returndatasize)\n    tag_9:\n      pop\n        /* \"test/safe_math.sol\":433:583  function withdraw() public {... */\n      jump\t// out\n\n    auxdata: 0xa264697066735822122006e579f879990d412ce9d3b5b33219b3ed3e6a59c19444827411fc310391bee264736f6c63430008070033\n}\n",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "6080604052336000806101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff16021790555034801561005057600080fd5b5061015e806100606000396000f3fe608060405234801561001057600080fd5b506004361061002b5760003560e01c80633ccfd60b14610030575b600080fd5b61003861003a565b005b60008054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff16146100bf576040517f82b4290000000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b60008054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff166108fc479081150290604051600060405180830381858888f19350505050158015610125573d6000803e3d6000fd5b5056fea264697066735822122006e579f879990d412ce9d3b5b33219b3ed3e6a59c19444827411fc310391bee264736f6c63430008070033",
							"opcodes": "PUSH1 0x80 PUSH1 0x40 MSTORE CALLER PUSH1 0x0 DUP1 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF MUL NOT AND SWAP1 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND MUL OR SWAP1 SSTORE POP CALLVALUE DUP1 ISZERO PUSH2 0x50 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x15E DUP1 PUSH2 0x60 PUSH1 0x0 CODECOPY PUSH1 0x0 RETURN INVALID PUSH1 0x80 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH2 0x10 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x4 CALLDATASIZE LT PUSH2 0x2B JUMPI PUSH1 0x0 CALLDATALOAD PUSH1 0xE0 SHR DUP1 PUSH4 0x3CCFD60B EQ PUSH2 0x30 JUMPI JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x38 PUSH2 0x3A JUMP JUMPDEST STOP JUMPDEST PUSH1 0x0 DUP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ PUSH2 0xBF JUMPI PUSH1 0x40 MLOAD PUSH32 0x82B4290000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x0 DUP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH2 0x8FC SELFBALANCE SWAP1 DUP2 ISZERO MUL SWAP1 PUSH1 0x40 MLOAD PUSH1 0x0 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP6 DUP9 DUP9 CALL SWAP4 POP POP POP POP ISZERO DUP1 ISZERO PUSH2 0x125 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP JUMP INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 MOD 0xE5 PUSH26 0xF879990D412CE9D3B5B33219B3ED3E6A59C19444827411FC3103 SWAP2 0xBE 0xE2 PUSH5 0x736F6C6343 STOP ADDMOD SMOD STOP CALLER ",
							"sourceMap": "353:243:0:-:0;;;415:10;383:43;;;;;;;;;;;;;;;;;;;;353:243;;;;;;;;;;;;;;;;"
						},
						"deployedBytecode": {
							"functionDebugData": {
								"@withdraw_64": {
									"entryPoint": 58,
									"id": 64,
									"parameterSlots": 0,
									"returnSlots": 0
								}
							},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "608060405234801561001057600080fd5b506004361061002b5760003560e01c80633ccfd60b14610030575b600080fd5b61003861003a565b005b60008054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff16146100bf576040517f82b4290000000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b60008054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff166108fc479081150290604051600060405180830381858888f19350505050158015610125573d6000803e3d6000fd5b5056fea264697066735822122006e579f879990d412ce9d3b5b33219b3ed3e6a59c19444827411fc310391bee264736f6c63430008070033",
							"opcodes": "PUSH1 0x80 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH2 0x10 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x4 CALLDATASIZE LT PUSH2 0x2B JUMPI PUSH1 0x0 CALLDATALOAD PUSH1 0xE0 SHR DUP1 PUSH4 0x3CCFD60B EQ PUSH2 0x30 JUMPI JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x38 PUSH2 0x3A JUMP JUMPDEST STOP JUMPDEST PUSH1 0x0 DUP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ PUSH2 0xBF JUMPI PUSH1 0x40 MLOAD PUSH32 0x82B4290000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x0 DUP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH2 0x8FC SELFBALANCE SWAP1 DUP2 ISZERO MUL SWAP1 PUSH1 0x40 MLOAD PUSH1 0x0 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP6 DUP9 DUP9 CALL SWAP4 POP POP POP POP ISZERO DUP1 ISZERO PUSH2 0x125 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP JUMP INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 MOD 0xE5 PUSH26 0xF879990D412CE9D3B5B33219B3ED3E6A59C19444827411FC3103 SWAP2 0xBE 0xE2 PUSH5 0x736F6C6343 STOP ADDMOD SMOD STOP CALLER ",
							"sourceMap": "353:243:0:-:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;433:150;;;:::i;:::-;;;488:5;;;;;;;;;;474:19;;:10;:19;;;470:58;;514:14;;;;;;;;;;;;;;470:58;539:5;;;;;;;;;;:14;;:37;554:21;539:37;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;433:150::o"
						},
						"gasEstimates": {
							"creation": {
								"codeDepositCost": "70000",
								"executionCost": "24383",
								"totalCost": "94383"
							},
							"external": {
								"withdraw()": "infinite"
							}
						},
						"legacyAssembly": {
							".code": [
								{
									"begin": 353,
									"end": 596,
									"name": "PUSH",
									"source": 0,
									"value": "80"
								},
								{
									"begin": 353,
									"end": 596,
									"name": "PUSH",
									"source": 0,
									"value": "40"
								},
								{
									"begin": 353,
									"end": 596,
									"name": "MSTORE",
									"source": 0
								},
								{
									"begin": 415,
									"end": 425,
									"name": "CALLER",
									"source": 0
								},
								{
									"begin": 383,
									"end": 426,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 383,
									"end": 426,
									"name": "DUP1",
									"source": 0
								},
								{
									"begin": 383,
									"end": 426,
									"name": "PUSH",
									"source": 0,
									"value": "100"
								},
								{
									"begin": 383,
									"end": 426,
									"name": "EXP",
									"source": 0
								},
								{
									"begin": 383,
									"end": 426,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 383,
									"end": 426,
									"name": "SLOAD",
									"source": 0
								},
								{
									"begin": 383,
									"end": 426,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 383,
									"end": 426,
									"name": "PUSH",
									"source": 0,
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 383,
									"end": 426,
									"name": "MUL",
									"source": 0
								},
								{
									"begin": 383,
									"end": 426,
									"name": "NOT",
									"source": 0
								},
								{
									"begin": 383,
									"end": 426,
									"name": "AND",
									"source": 0
								},
								{
									"begin": 383,
									"end": 426,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 383,
									"end": 426,
									"name": "DUP4",
									"source": 0
								},
								{
									"begin": 383,
									"end": 426,
									"name": "PUSH",
									"source": 0,
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 383,
									"end": 426,
									"name": "AND",
									"source": 0
								},
								{
									"begin": 383,
									"end": 426,
									"name": "MUL",
									"source": 0
								},
								{
									"begin": 383,
									"end": 426,
									"name": "OR",
									"source": 0
								},
								{
									"begin": 383,
									"end": 426,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 383,
									"end": 426,
									"name": "SSTORE",
									"source": 0
								},
								{
									"begin": 383,
									"end": 426,
									"name": "POP",
									"source": 0
								},
								{
									"begin": 353,
									"end": 596,
									"name": "CALLVALUE",
									"source": 0
								},
								{
									"begin": 353,
									"end": 596,
									"name": "DUP1",
									"source": 0
								},
								{
									"begin": 353,
									"end": 596,
									"name": "ISZERO",
									"source": 0
								},
								{
									"begin": 353,
									"end": 596,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "1"
								},
								{
									"begin": 353,
									"end": 596,
									"name": "JUMPI",
									"source": 0
								},
								{
									"begin": 353,
									"end": 596,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 353,
									"end": 596,
									"name": "DUP1",
									"source": 0
								},
								{
									"begin": 353,
									"end": 596,
									"name": "REVERT",
									"source": 0
								},
								{
									"begin": 353,
									"end": 596,
									"name": "tag",
									"source": 0,
									"value": "1"
								},
								{
									"begin": 353,
									"end": 596,
									"name": "JUMPDEST",
									"source": 0
								},
								{
									"begin": 353,
									"end": 596,
									"name": "POP",
									"source": 0
								},
								{
									"begin": 353,
									"end": 596,
									"name": "PUSH #[$]",
									"source": 0,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 353,
									"end": 596,
									"name": "DUP1",
									"source": 0
								},
								{
									"begin": 353,
									"end": 596,
									"name": "PUSH [$]",
									"source": 0,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 353,
									"end": 596,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 353,
									"end": 596,
									"name": "CODECOPY",
									"source": 0
								},
								{
									"begin": 353,
									"end": 596,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 353,
									"end": 596,
									"name": "RETURN",
									"source": 0
								}
							],
							".data": {
								"0": {
									".auxdata": "a264697066735822122006e579f879990d412ce9d3b5b33219b3ed3e6a59c19444827411fc310391bee264736f6c63430008070033",
									".code": [
										{
											"begin": 353,
											"end": 596,
											"name": "PUSH",
											"source": 0,
											"value": "80"
										},
										{
											"begin": 353,
											"end": 596,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 353,
											"end": 596,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 353,
											"end": 596,
											"name": "CALLVALUE",
											"source": 0
										},
										{
											"begin": 353,
											"end": 596,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 353,
											"end": 596,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 353,
											"end": 596,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "1"
										},
										{
											"begin": 353,
											"end": 596,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 353,
											"end": 596,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 353,
											"end": 596,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 353,
											"end": 596,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 353,
											"end": 596,
											"name": "tag",
											"source": 0,
											"value": "1"
										},
										{
											"begin": 353,
											"end": 596,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 353,
											"end": 596,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 353,
											"end": 596,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 353,
											"end": 596,
											"name": "CALLDATASIZE",
											"source": 0
										},
										{
											"begin": 353,
											"end": 596,
											"name": "LT",
											"source": 0
										},
										{
											"begin": 353,
											"end": 596,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "2"
										},
										{
											"begin": 353,
											"end": 596,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 353,
											"end": 596,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 353,
											"end": 596,
											"name": "CALLDATALOAD",
											"source": 0
										},
										{
											"begin": 353,
											"end": 596,
											"name": "PUSH",
											"source": 0,
											"value": "E0"
										},
										{
											"begin": 353,
											"end": 596,
											"name": "SHR",
											"source": 0
										},
										{
											"begin": 353,
											"end": 596,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 353,
											"end": 596,
											"name": "PUSH",
											"source": 0,
											"value": "3CCFD60B"
										},
										{
											"begin": 353,
											"end": 596,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 353,
											"end": 596,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "3"
										},
										{
											"begin": 353,
											"end": 596,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 353,
											"end": 596,
											"name": "tag",
											"source": 0,
											"value": "2"
										},
										{
											"begin": 353,
											"end": 596,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 353,
											"end": 596,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 353,
											"end": 596,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 353,
											"end": 596,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 433,
											"end": 583,
											"name": "tag",
											"source": 0,
											"value": "3"
										},
										{
											"begin": 433,
											"end": 583,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 433,
											"end": 583,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 433,
											"end": 583,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "5"
										},
										{
											"begin": 433,
											"end": 583,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 433,
											"end": 583,
											"name": "tag",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 433,
											"end": 583,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 433,
											"end": 583,
											"name": "STOP",
											"source": 0
										},
										{
											"begin": 433,
											"end": 583,
											"name": "tag",
											"source": 0,
											"value": "5"
										},
										{
											"begin": 433,
											"end": 583,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 488,
											"end": 493,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 488,
											"end": 493,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 488,
											"end": 493,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 488,
											"end": 493,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 488,
											"end": 493,
											"name": "PUSH",
											"source": 0,
											"value": "100"
										},
										{
											"begin": 488,
											"end": 493,
											"name": "EXP",
											"source": 0
										},
										{
											"begin": 488,
											"end": 493,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 488,
											"end": 493,
											"name": "DIV",
											"source": 0
										},
										{
											"begin": 488,
											"end": 493,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 488,
											"end": 493,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 474,
											"end": 493,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 474,
											"end": 493,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 474,
											"end": 484,
											"name": "CALLER",
											"source": 0
										},
										{
											"begin": 474,
											"end": 493,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 474,
											"end": 493,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 474,
											"end": 493,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 470,
											"end": 528,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "7"
										},
										{
											"begin": 470,
											"end": 528,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 514,
											"end": 528,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 514,
											"end": 528,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 514,
											"end": 528,
											"name": "PUSH",
											"source": 0,
											"value": "82B4290000000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 514,
											"end": 528,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 514,
											"end": 528,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 514,
											"end": 528,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 514,
											"end": 528,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 514,
											"end": 528,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 514,
											"end": 528,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 514,
											"end": 528,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 514,
											"end": 528,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 514,
											"end": 528,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 514,
											"end": 528,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 514,
											"end": 528,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 470,
											"end": 528,
											"name": "tag",
											"source": 0,
											"value": "7"
										},
										{
											"begin": 470,
											"end": 528,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 539,
											"end": 544,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 539,
											"end": 544,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 539,
											"end": 544,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 539,
											"end": 544,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 539,
											"end": 544,
											"name": "PUSH",
											"source": 0,
											"value": "100"
										},
										{
											"begin": 539,
											"end": 544,
											"name": "EXP",
											"source": 0
										},
										{
											"begin": 539,
											"end": 544,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 539,
											"end": 544,
											"name": "DIV",
											"source": 0
										},
										{
											"begin": 539,
											"end": 544,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 539,
											"end": 544,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 539,
											"end": 553,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 539,
											"end": 553,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 539,
											"end": 576,
											"name": "PUSH",
											"source": 0,
											"value": "8FC"
										},
										{
											"begin": 554,
											"end": 575,
											"name": "SELFBALANCE",
											"source": 0
										},
										{
											"begin": 539,
											"end": 576,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 539,
											"end": 576,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 539,
											"end": 576,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 539,
											"end": 576,
											"name": "MUL",
											"source": 0
										},
										{
											"begin": 539,
											"end": 576,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 539,
											"end": 576,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 539,
											"end": 576,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 539,
											"end": 576,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 539,
											"end": 576,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 539,
											"end": 576,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 539,
											"end": 576,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 539,
											"end": 576,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 539,
											"end": 576,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 539,
											"end": 576,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 539,
											"end": 576,
											"name": "DUP6",
											"source": 0
										},
										{
											"begin": 539,
											"end": 576,
											"name": "DUP9",
											"source": 0
										},
										{
											"begin": 539,
											"end": 576,
											"name": "DUP9",
											"source": 0
										},
										{
											"begin": 539,
											"end": 576,
											"name": "CALL",
											"source": 0
										},
										{
											"begin": 539,
											"end": 576,
											"name": "SWAP4",
											"source": 0
										},
										{
											"begin": 539,
											"end": 576,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 539,
											"end": 576,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 539,
											"end": 576,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 539,
											"end": 576,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 539,
											"end": 576,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 539,
											"end": 576,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 539,
											"end": 576,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 539,
											"end": 576,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "9"
										},
										{
											"begin": 539,
											"end": 576,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 539,
											"end": 576,
											"name": "RETURNDATASIZE",
											"source": 0
										},
										{
											"begin": 539,
											"end": 576,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 539,
											"end": 576,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 539,
											"end": 576,
											"name": "RETURNDATACOPY",
											"source": 0
										},
										{
											"begin": 539,
											"end": 576,
											"name": "RETURNDATASIZE",
											"source": 0
										},
										{
											"begin": 539,
											"end": 576,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 539,
											"end": 576,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 539,
											"end": 576,
											"name": "tag",
											"source": 0,
											"value": "9"
										},
										{
											"begin": 539,
											"end": 576,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 539,
											"end": 576,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 433,
											"end": 583,
											"name": "JUMP",
											"source": 0,
											"value": "[out]"
										}
									]
								}
							}
						},
						"methodIdentifiers": {
							"withdraw()": "3ccfd60b"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.7+commit.e28d00a7\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[],\"name\":\"Unauthorized\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"withdraw\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"test/safe_math.sol\":\"VendingMachine\"},\"evmVersion\":\"london\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"test/safe_math.sol\":{\"keccak256\":\"0x13ea1eb53106b91831fb81876b935db23d81852220f120498f349dce2d970c11\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://e139d886b0455b3f35053961b241c4dbf54ffb92b61d6ece78873e1f75ef1c5f\",\"dweb:/ipfs/QmUyPvLfvDfk3sToHFfkSfgAW7icX4LXqXcYgU6GrDeRWp\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [
							{
								"astId": 42,
								"contract": "test/safe_math.sol:VendingMachine",
								"label": "owner",
								"offset": 0,
								"slot": "0",
								"type": "t_address_payable"
							}
						],
						"types": {
							"t_address_payable": {
								"encoding": "inplace",
								"label": "address payable",
								"numberOfBytes": "20"
							}
						}
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			}
		},
		"sources": {
			"test/safe_math.sol": {
				"ast": {
					"absolutePath": "test/safe_math.sol",
					"exportedSymbols": {
						"SafeMath": [
							33
						],
						"Unauthorized": [
							35
						],
						"VendingMachine": [
							65
						]
					},
					"id": 66,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 1,
							"literals": [
								"solidity",
								"^",
								"0.8"
							],
							"nodeType": "PragmaDirective",
							"src": "31:21:0"
						},
						{
							"abstract": false,
							"baseContracts": [],
							"contractDependencies": [],
							"contractKind": "contract",
							"fullyImplemented": true,
							"id": 33,
							"linearizedBaseContracts": [
								33
							],
							"name": "SafeMath",
							"nameLocation": "62:8:0",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"body": {
										"id": 15,
										"nodeType": "Block",
										"src": "129:58:0",
										"statements": [
											{
												"assignments": [
													7
												],
												"declarations": [
													{
														"constant": false,
														"id": 7,
														"mutability": "mutable",
														"name": "x",
														"nameLocation": "144:1:0",
														"nodeType": "VariableDeclaration",
														"scope": 15,
														"src": "139:6:0",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 6,
															"name": "uint",
															"nodeType": "ElementaryTypeName",
															"src": "139:4:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 9,
												"initialValue": {
													"hexValue": "30",
													"id": 8,
													"isConstant": false,
													"isLValue": false,
													"isPure": true,
													"kind": "number",
													"lValueRequested": false,
													"nodeType": "Literal",
													"src": "148:1:0",
													"typeDescriptions": {
														"typeIdentifier": "t_rational_0_by_1",
														"typeString": "int_const 0"
													},
													"value": "0"
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "139:10:0"
											},
											{
												"expression": {
													"id": 11,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"nodeType": "UnaryOperation",
													"operator": "--",
													"prefix": false,
													"src": "159:3:0",
													"subExpression": {
														"id": 10,
														"name": "x",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 7,
														"src": "159:1:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 12,
												"nodeType": "ExpressionStatement",
												"src": "159:3:0"
											},
											{
												"expression": {
													"id": 13,
													"name": "x",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 7,
													"src": "179:1:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"functionReturnParameters": 5,
												"id": 14,
												"nodeType": "Return",
												"src": "172:8:0"
											}
										]
									},
									"functionSelector": "7f3f6a73",
									"id": 16,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "testUnderflow",
									"nameLocation": "86:13:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 2,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "99:2:0"
									},
									"returnParameters": {
										"id": 5,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 4,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 16,
												"src": "123:4:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 3,
													"name": "uint",
													"nodeType": "ElementaryTypeName",
													"src": "123:4:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "122:6:0"
									},
									"scope": 33,
									"src": "77:110:0",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "public"
								},
								{
									"body": {
										"id": 31,
										"nodeType": "Block",
										"src": "254:72:0",
										"statements": [
											{
												"assignments": [
													22
												],
												"declarations": [
													{
														"constant": false,
														"id": 22,
														"mutability": "mutable",
														"name": "x",
														"nameLocation": "269:1:0",
														"nodeType": "VariableDeclaration",
														"scope": 31,
														"src": "264:6:0",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 21,
															"name": "uint",
															"nodeType": "ElementaryTypeName",
															"src": "264:4:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 24,
												"initialValue": {
													"hexValue": "30",
													"id": 23,
													"isConstant": false,
													"isLValue": false,
													"isPure": true,
													"kind": "number",
													"lValueRequested": false,
													"nodeType": "Literal",
													"src": "273:1:0",
													"typeDescriptions": {
														"typeIdentifier": "t_rational_0_by_1",
														"typeString": "int_const 0"
													},
													"value": "0"
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "264:10:0"
											},
											{
												"id": 28,
												"nodeType": "UncheckedBlock",
												"src": "284:18:0",
												"statements": [
													{
														"expression": {
															"id": 26,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"nodeType": "UnaryOperation",
															"operator": "--",
															"prefix": false,
															"src": "296:3:0",
															"subExpression": {
																"id": 25,
																"name": "x",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 22,
																"src": "296:1:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"id": 27,
														"nodeType": "ExpressionStatement",
														"src": "296:3:0"
													}
												]
											},
											{
												"expression": {
													"id": 29,
													"name": "x",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 22,
													"src": "318:1:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"functionReturnParameters": 20,
												"id": 30,
												"nodeType": "Return",
												"src": "311:8:0"
											}
										]
									},
									"functionSelector": "a9a3e611",
									"id": 32,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "testUncheckedUnderflow",
									"nameLocation": "202:22:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 17,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "224:2:0"
									},
									"returnParameters": {
										"id": 20,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 19,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 32,
												"src": "248:4:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 18,
													"name": "uint",
													"nodeType": "ElementaryTypeName",
													"src": "248:4:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "247:6:0"
									},
									"scope": 33,
									"src": "193:133:0",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "public"
								}
							],
							"scope": 66,
							"src": "53:275:0",
							"usedErrors": []
						},
						{
							"id": 35,
							"name": "Unauthorized",
							"nameLocation": "336:12:0",
							"nodeType": "ErrorDefinition",
							"parameters": {
								"id": 34,
								"nodeType": "ParameterList",
								"parameters": [],
								"src": "348:2:0"
							},
							"src": "330:21:0"
						},
						{
							"abstract": false,
							"baseContracts": [],
							"contractDependencies": [],
							"contractKind": "contract",
							"fullyImplemented": true,
							"id": 65,
							"linearizedBaseContracts": [
								65
							],
							"name": "VendingMachine",
							"nameLocation": "362:14:0",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"constant": false,
									"id": 42,
									"mutability": "mutable",
									"name": "owner",
									"nameLocation": "399:5:0",
									"nodeType": "VariableDeclaration",
									"scope": 65,
									"src": "383:43:0",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_address_payable",
										"typeString": "address payable"
									},
									"typeName": {
										"id": 36,
										"name": "address",
										"nodeType": "ElementaryTypeName",
										"src": "383:15:0",
										"stateMutability": "payable",
										"typeDescriptions": {
											"typeIdentifier": "t_address_payable",
											"typeString": "address payable"
										}
									},
									"value": {
										"arguments": [
											{
												"expression": {
													"id": 39,
													"name": "msg",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 4294967281,
													"src": "415:3:0",
													"typeDescriptions": {
														"typeIdentifier": "t_magic_message",
														"typeString": "msg"
													}
												},
												"id": 40,
												"isConstant": false,
												"isLValue": false,
												"isPure": false,
												"lValueRequested": false,
												"memberName": "sender",
												"nodeType": "MemberAccess",
												"src": "415:10:0",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												}
											}
										],
										"expression": {
											"argumentTypes": [
												{
													"typeIdentifier": "t_address",
													"typeString": "address"
												}
											],
											"id": 38,
											"isConstant": false,
											"isLValue": false,
											"isPure": true,
											"lValueRequested": false,
											"nodeType": "ElementaryTypeNameExpression",
											"src": "407:8:0",
											"typeDescriptions": {
												"typeIdentifier": "t_type$_t_address_payable_$",
												"typeString": "type(address payable)"
											},
											"typeName": {
												"id": 37,
												"name": "address",
												"nodeType": "ElementaryTypeName",
												"src": "407:8:0",
												"stateMutability": "payable",
												"typeDescriptions": {}
											}
										},
										"id": 41,
										"isConstant": false,
										"isLValue": false,
										"isPure": false,
										"kind": "typeConversion",
										"lValueRequested": false,
										"names": [],
										"nodeType": "FunctionCall",
										"src": "407:19:0",
										"tryCall": false,
										"typeDescriptions": {
											"typeIdentifier": "t_address_payable",
											"typeString": "address payable"
										}
									},
									"visibility": "internal"
								},
								{
									"body": {
										"id": 63,
										"nodeType": "Block",
										"src": "460:123:0",
										"statements": [
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													},
													"id": 48,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"expression": {
															"id": 45,
															"name": "msg",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 4294967281,
															"src": "474:3:0",
															"typeDescriptions": {
																"typeIdentifier": "t_magic_message",
																"typeString": "msg"
															}
														},
														"id": 46,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberName": "sender",
														"nodeType": "MemberAccess",
														"src": "474:10:0",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "!=",
													"rightExpression": {
														"id": 47,
														"name": "owner",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 42,
														"src": "488:5:0",
														"typeDescriptions": {
															"typeIdentifier": "t_address_payable",
															"typeString": "address payable"
														}
													},
													"src": "474:19:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 52,
												"nodeType": "IfStatement",
												"src": "470:58:0",
												"trueBody": {
													"errorCall": {
														"arguments": [],
														"expression": {
															"argumentTypes": [],
															"id": 49,
															"name": "Unauthorized",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 35,
															"src": "514:12:0",
															"typeDescriptions": {
																"typeIdentifier": "t_function_error_pure$__$returns$__$",
																"typeString": "function () pure"
															}
														},
														"id": 50,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "functionCall",
														"lValueRequested": false,
														"names": [],
														"nodeType": "FunctionCall",
														"src": "514:14:0",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_tuple$__$",
															"typeString": "tuple()"
														}
													},
													"id": 51,
													"nodeType": "RevertStatement",
													"src": "507:21:0"
												}
											},
											{
												"expression": {
													"arguments": [
														{
															"expression": {
																"arguments": [
																	{
																		"id": 58,
																		"name": "this",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 4294967268,
																		"src": "562:4:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_contract$_VendingMachine_$65",
																			"typeString": "contract VendingMachine"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_contract$_VendingMachine_$65",
																			"typeString": "contract VendingMachine"
																		}
																	],
																	"id": 57,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"lValueRequested": false,
																	"nodeType": "ElementaryTypeNameExpression",
																	"src": "554:7:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_type$_t_address_$",
																		"typeString": "type(address)"
																	},
																	"typeName": {
																		"id": 56,
																		"name": "address",
																		"nodeType": "ElementaryTypeName",
																		"src": "554:7:0",
																		"typeDescriptions": {}
																	}
																},
																"id": 59,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "typeConversion",
																"lValueRequested": false,
																"names": [],
																"nodeType": "FunctionCall",
																"src": "554:13:0",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"id": 60,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberName": "balance",
															"nodeType": "MemberAccess",
															"src": "554:21:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"expression": {
															"id": 53,
															"name": "owner",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 42,
															"src": "539:5:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address_payable",
																"typeString": "address payable"
															}
														},
														"id": 55,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberName": "transfer",
														"nodeType": "MemberAccess",
														"src": "539:14:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_transfer_nonpayable$_t_uint256_$returns$__$",
															"typeString": "function (uint256)"
														}
													},
													"id": 61,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "539:37:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 62,
												"nodeType": "ExpressionStatement",
												"src": "539:37:0"
											}
										]
									},
									"functionSelector": "3ccfd60b",
									"id": 64,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "withdraw",
									"nameLocation": "442:8:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 43,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "450:2:0"
									},
									"returnParameters": {
										"id": 44,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "460:0:0"
									},
									"scope": 65,
									"src": "433:150:0",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "public"
								}
							],
							"scope": 66,
							"src": "353:243:0",
							"usedErrors": [
								35
							]
						}
					],
					"src": "31:565:0"
				},
				"id": 0
			}
		}
	}
}